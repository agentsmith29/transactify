version: '3.9'

services:
  

  db:
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 5432:${DB_PORT}
  
  terminal1:
    build:
      context: .
      dockerfile: ./transactify_terminal/Dockerfile
    restart: always
    privileged: true  # Grants access to devices and kernel features
    cap_add:
      - SYS_RAWIO  # Allows raw GPIO access
    security_opt:
      - apparmor:unconfined  # Unrestricted access to hardware
    environment:
      # !DANGEROUS! DB_RESET: "false"    # Delets and recreates the database (dangerous)
      REMIGRATE: "false"
      SERVICE_NAME: "terminal1"
      # Creation of the admin user
      ADMIN_USER: "admin"
      ADMIN_PASSWORD: "admin1" 
      ADMIN_EMAIL: "admin@admin.com"
      # 
      DJANGO_DB_HOST: db
      DJANGO_DB_PORT: ${DB_PORT}
      DJANGO_DB_USER: ${DB_USER}
      DJANGO_DB_PASSWORD: ${DB_PASSWORD}
      #
      DJANGO_WEB_PORT: ${PROJECT_PORT}
      DJANGO_WEB_HOST: ${PROJECT_HOST}
      #TARGET_SERVICES: http://192.168.1.190:8000/donknabberello #, http://service2:8000
    volumes:
      - /run/docker.sock:/run/docker.sock:ro
      - nginx_data:/etc/nginx/conf.d
      - static_volume:/app/static
    depends_on:
      - doncaramello
      - donknabberello 
    healthcheck:
      test: "curl http://127.0.0.1:${PROJECT_PORT}/terminal1/health"
      start_period: 10s
      interval: 10s
      timeout: 10s
      retries: 10

  
  donknabberello:
    build:
      context: .
      dockerfile: ./transactify_service/Dockerfile
    restart: always
    depends_on:
      - db
    environment:
      # Trigger the remigration of the database
      # !DANGEROUS! DB_RESET: "false"    # Delets and recreates the database (dangerous)
      REMIGRATE: "false"  # Remigrates the database
      # The name of the service, used for url construction: e.g. http://localhost:8000/<SERVICE_NAME>
      SERVICE_NAME: "donknabberello"
      # Creation of the admin user
      ADMIN_USER: "admin"
      ADMIN_PASSWORD: "admin" 
      ADMIN_EMAIL: "admin@admin.com"
      # Database Setting, set in the .env file
      DJANGO_DB_HOST: db
      DJANGO_DB_PORT: ${DB_PORT}
      DJANGO_DB_USER: ${DB_USER}
      DJANGO_DB_PASSWORD: ${DB_PASSWORD}
      # Django Setting, set in the .env file
      DJANGO_WEB_PORT: ${PROJECT_PORT}
      DJANGO_WEB_HOST: ${PROJECT_HOST}
      # Terminal Service URL, can be hosted on a different hardware
      TERMINAL_SERVICES: http://terminal1:${PROJECT_PORT}/terminal1
    volumes:
      - /run/docker.sock:/run/docker.sock:ro
      - nginx_data:/etc/nginx/conf.d
      - static_volume:/app/static
    healthcheck:
      test: "curl http://127.0.0.1:${PROJECT_PORT}/donknabberello/health"
      start_period: 10s
      interval: 10s
      timeout: 10s
      retries: 10

    

  doncaramello:
    build:
      context: .
      dockerfile: ./transactify_service/Dockerfile
    restart: always
    depends_on:
      - db
    environment:
      # Trigger the remigration or resetting of the database
      # !DANGEROUS! DB_RESET: "false"    # Delets and recreates the database (dangerous)
      REMIGRATE: "false"  # Remigrates the database
      # The name of the service, used for url construction: e.g. http://localhost:8000/<SERVICE_NAME>
      SERVICE_NAME: "doncaramello" 
      ADMIN_USER: "admin"
      ADMIN_PASSWORD: "admin" 
      # Database Setting, set in the .env file
      DJANGO_DB_HOST: db
      DJANGO_DB_PORT: ${DB_PORT}
      DJANGO_DB_USER: ${DB_USER}
      DJANGO_DB_PASSWORD: ${DB_PASSWORD}
      # Django Setting, set in the .env file
      DJANGO_WEB_PORT: ${PROJECT_PORT}
      DJANGO_WEB_HOST: ${PROJECT_HOST}
      # Terminal Service URL, can be hosted on a different hardware
      TERMINAL_SERVICES: http://terminal1:${PROJECT_PORT}/terminal1
    volumes:
      - /run/docker.sock:/run/docker.sock:ro
      - nginx_data:/etc/nginx/conf.d
      - static_volume:/app/static
    healthcheck:
      test: "curl http://127.0.0.1:${PROJECT_PORT}/doncaramello/health"
      start_period: 10s
      interval: 10s
      timeout: 10s
      retries: 10



  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    #depends_on:
    #  - django

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - static_volume:/static
      - nginx_data:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./nginx/nginx.sh:/docker-entrypoint.d/nginx.sh
      #- ./nginx/nginx.donknabberello.conf:/etc/nginx/nginx.donknabberello.conf
    ports:
      - 8000:8000
    depends_on:
      donknabberello:
        condition: service_started
      doncaramello:
        condition: service_started
      terminal1:
        condition: service_started
    # COmmand to remove all nginx.*.conf files bevor starting the container using the default entrypoint
    #entrypoint: [
    #  "/bin/bash",
    #  "-c",
    #  "rm -f /etc/nginx/conf.d/nginx.*.conf && /docker-entrypoint.sh;"
    #]
    
    
    



volumes:
  nginx_data:
  postgres_data:
  static_volume: